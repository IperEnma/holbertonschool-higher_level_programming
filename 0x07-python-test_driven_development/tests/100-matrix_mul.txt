CHECKING IMPORTE MODULE
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

CHECKING DOCSTRING FUNCTION
    >>> len(matrix_mul.__doc__) > 1
    True

CHECKING DOCTRING MODULE
    >>> module = __import__('100-matrix_mul')

    >>> len(module.__doc__) > 1
    True

CHECKING BASIC CASE
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

CHECKING DIFERENT SIZE
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 1], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

    >>> matrix_mul([[1, 2], [3, 4, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[1, 2, 4], [3, 5 ,6]], [[1,2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[1, 2], [3, 4], [3,4]], [[1, 2, 1], [3, 4, 2]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

CHECKING NO LIST
    >>> matrix_mul([[1, 2], [3, 4]], "Holberton")
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

    >>> matrix_mul([1, 2 ,3, 4], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[5, 6], [7, 8]], [1, 2, 3, 4])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

CHECKING LIST EMPTY
    >>> matrix_mul([[]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

    >>> matrix_mul([[5, 6], [7, 8]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

    >>> matrix_mul([], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

     >>> matrix_mul([[5, 6], [7, 8]], [])
     Traceback (most recent call last):
     ...
     ValueError: m_b can't be empty

CHECKING ELEMENT NO INT
    >>> matrix_mul([[6, "6"], [7, 8]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[6, 6], [7, 8]], [[5, "6"], [7, 8]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

CHECKING DIFERENT ARGUMENTS
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

    >>> matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() takes 2 positional arguments but 3 were given
